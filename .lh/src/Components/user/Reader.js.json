{
    "sourceFile": "src/Components/user/Reader.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 11,
            "patches": [
                {
                    "date": 1676829646082,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1676829790299,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n     /* use states */\r\n   /* strated useState used to identify the scanning is started */\r\n   const [started,setStarted]=useState(false)\r\n   \r\n-  const [resultTxt,setResultTxt]=useState([\"\"])\r\n+  const [resultTxt,setResultTxt]=useState([\"\")\r\n   /* When qr code get an result */\r\n   let done=(result,qrScanner)=>{\r\n     setResultTxt([result,...resultTxt])\r\n     console.log(resultTxt)\r\n"
                },
                {
                    "date": 1676829797435,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,12 +6,12 @@\n     /* use states */\r\n   /* strated useState used to identify the scanning is started */\r\n   const [started,setStarted]=useState(false)\r\n   \r\n-  const [resultTxt,setResultTxt]=useState([\"\")\r\n+  const [resultTxt,setResultTxt]=useState(\"\")\r\n   /* When qr code get an result */\r\n   let done=(result,qrScanner)=>{\r\n-    setResultTxt([result,...resultTxt])\r\n+    setResultTxt([result)\r\n     console.log(resultTxt)\r\n     console.log(resultTxt.length!=1)\r\n    \r\n     /* setButton(<button className='p-2 m-2 rounded primary-bg secondary-text' onClick={()=>qrScanner.stop()}>Stop</button>) */\r\n"
                },
                {
                    "date": 1676829804149,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,11 +9,10 @@\n   \r\n   const [resultTxt,setResultTxt]=useState(\"\")\r\n   /* When qr code get an result */\r\n   let done=(result,qrScanner)=>{\r\n-    setResultTxt([result)\r\n-    console.log(resultTxt)\r\n-    console.log(resultTxt.length!=1)\r\n+    setResultTxt(result)\r\n+ \r\n    \r\n     /* setButton(<button className='p-2 m-2 rounded primary-bg secondary-text' onClick={()=>qrScanner.stop()}>Stop</button>) */\r\n \r\n   }\r\n"
                },
                {
                    "date": 1676829906515,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,14 +33,9 @@\n   console.log(load)\r\n useEffect(()=>{\r\n   console.log(resultTxt)\r\n })\r\n-let copytxt=(e)=>{\r\n- \r\n \r\n-navigator.clipboard.writeText(resultTxt[0])\r\n-alert(\"Text copied\")\r\n-}\r\n let ico=<svg  xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-6 h-6\"  >\r\n <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.75 17.25v3.375c0 .621-.504 1.125-1.125 1.125h-9.75a1.125 1.125 0 01-1.125-1.125V7.875c0-.621.504-1.125 1.125-1.125H6.75a9.06 9.06 0 011.5.124m7.5 10.376h3.375c.621 0 1.125-.504 1.125-1.125V11.25c0-4.46-3.243-8.161-7.5-8.876a9.06 9.06 0 00-1.5-.124H9.375c-.621 0-1.125.504-1.125 1.125v3.5m7.5 10.375H9.375a1.125 1.125 0 01-1.125-1.125v-9.25m12 6.625v-1.875a3.375 3.375 0 00-3.375-3.375h-1.5a1.125 1.125 0 01-1.125-1.125v-1.5a3.375 3.375 0 00-3.375-3.375H9.75\" />\r\n </svg>\r\n return (\r\n"
                },
                {
                    "date": 1676829934636,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,25 +52,9 @@\n     </div>\r\n     \r\n    \r\n     <div className='w-full absolute font-semibold text-sm overflow-x-scroll bottom-0 bg-gray-200'>\r\n-      <div className='flex gap-2 items-center justify-center'>\r\n-      {resultTxt.length!=1?<svg onClick={(e)=>{copytxt(e);}} xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-6 h-6 \"  >\r\n-  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.75 17.25v3.375c0 .621-.504 1.125-1.125 1.125h-9.75a1.125 1.125 0 01-1.125-1.125V7.875c0-.621.504-1.125 1.125-1.125H6.75a9.06 9.06 0 011.5.124m7.5 10.376h3.375c.621 0 1.125-.504 1.125-1.125V11.25c0-4.46-3.243-8.161-7.5-8.876a9.06 9.06 0 00-1.5-.124H9.375c-.621 0-1.125.504-1.125 1.125v3.5m7.5 10.375H9.375a1.125 1.125 0 01-1.125-1.125v-9.25m12 6.625v-1.875a3.375 3.375 0 00-3.375-3.375h-1.5a1.125 1.125 0 01-1.125-1.125v-1.5a3.375 3.375 0 00-3.375-3.375H9.75\" />\r\n-</svg>:null\r\n-}\r\n-     {resultTxt.length!=1?resultTxt.map((r)=>{\r\n-return (\r\n- \r\n-<h1 onClick={(e)=>{copytxt(e)}} className='my-4 mx-2'>\r\n-\r\n-\r\n-  {r}</h1>\r\n-\r\n- \r\n-)\r\n-     }):resultTxt[0]}\r\n-     </div>\r\n+     \r\n     </div>\r\n     {button}\r\n </div>\r\n     </div>\r\n"
                },
                {
                    "date": 1676830588401,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,64 @@\n+import React,{useState,useEffect} from 'react'\r\n+import QrScanner from 'qr-scanner';\r\n+import load from './load.gif';\r\n+import icon from \"./icon.png\";\r\n+function Reader() {\r\n+    /* use states */\r\n+  /* strated useState used to identify the scanning is started */\r\n+  const [started,setStarted]=useState(false)\r\n+  \r\n+  const [resultTxt,setResultTxt]=useState(\"\")\r\n+  /* When qr code get an result */\r\n+  let done=(result,qrScanner)=>{\r\n+    setResultTxt(result)\r\n+ \r\n+   \r\n+    /* setButton(<button className='p-2 m-2 rounded primary-bg secondary-text' onClick={()=>qrScanner.stop()}>Stop</button>) */\r\n+\r\n+  }\r\n+  /* starting the scan */\r\n+let scan=()=>{\r\n+setStarted(true)\r\n+setButton(\"\")\r\n+  let video=document.getElementById(\"qr\")\r\n+  const qrScanner = new QrScanner(\r\n+    video,\r\n+    result => done(result,qrScanner),\r\n+    // No options provided. This will use the old api and is deprecated in the current version until next major version.\r\n+    );\r\n+    qrScanner.start()\r\n+}\r\n+/* to change scannow button to scanning when scan started */\r\n+const [button,setButton]=useState( <button className='p-3 my-40 z-20 shadow-sm rounded bg-blue-500 text-white ' onClick={scan}>Scan Now</button>)\r\n+  console.log(load)\r\n+useEffect(()=>{\r\n+  console.log(resultTxt)\r\n+})\r\n+\r\n+let ico=<svg  xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-6 h-6\"  >\r\n+<path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.75 17.25v3.375c0 .621-.504 1.125-1.125 1.125h-9.75a1.125 1.125 0 01-1.125-1.125V7.875c0-.621.504-1.125 1.125-1.125H6.75a9.06 9.06 0 011.5.124m7.5 10.376h3.375c.621 0 1.125-.504 1.125-1.125V11.25c0-4.46-3.243-8.161-7.5-8.876a9.06 9.06 0 00-1.5-.124H9.375c-.621 0-1.125.504-1.125 1.125v3.5m7.5 10.375H9.375a1.125 1.125 0 01-1.125-1.125v-9.25m12 6.625v-1.875a3.375 3.375 0 00-3.375-3.375h-1.5a1.125 1.125 0 01-1.125-1.125v-1.5a3.375 3.375 0 00-3.375-3.375H9.75\" />\r\n+</svg>\r\n+return (\r\n+    <div className='font-[\"Poppins\"]'>\r\n+        <Hea\r\n+      <div className='container   w-full h-full mx-auto text-center'>\r\n+       \r\n+        <h1 className='text-xl flex items-center gap-2 justify-center font-semibold my-4'>\r\n+          <img src={icon} className='w-8'/>\r\n+          QR Scanner</h1>\r\n+        \r\n+        <div className=''>\r\n+        <img className=\"absolute w-3/4 mx-11 mt-11 z-10\" src={load} alt=\"load\"></img>\r\n+      <video id=\"qr\" className='  md:w-2/4 md:h-full    mx-auto'  ></video>\r\n+    </div>\r\n+    \r\n+   \r\n+    <div className='w-full absolute font-semibold text-sm overflow-x-scroll bottom-0 bg-gray-200'>\r\n+     \r\n+    </div>\r\n+    {button}\r\n+</div>\r\n+    </div>\r\n+  )\r\n+}\r\n+export default Reader\n\\ No newline at end of file\n"
                },
                {
                    "date": 1676830614817,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n import React,{useState,useEffect} from 'react'\r\n import QrScanner from 'qr-scanner';\r\n import load from './load.gif';\r\n import icon from \"./icon.png\";\r\n+import Header from '../Header';\r\n function Reader() {\r\n     /* use states */\r\n   /* strated useState used to identify the scanning is started */\r\n   const [started,setStarted]=useState(false)\r\n@@ -39,77 +40,12 @@\n <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.75 17.25v3.375c0 .621-.504 1.125-1.125 1.125h-9.75a1.125 1.125 0 01-1.125-1.125V7.875c0-.621.504-1.125 1.125-1.125H6.75a9.06 9.06 0 011.5.124m7.5 10.376h3.375c.621 0 1.125-.504 1.125-1.125V11.25c0-4.46-3.243-8.161-7.5-8.876a9.06 9.06 0 00-1.5-.124H9.375c-.621 0-1.125.504-1.125 1.125v3.5m7.5 10.375H9.375a1.125 1.125 0 01-1.125-1.125v-9.25m12 6.625v-1.875a3.375 3.375 0 00-3.375-3.375h-1.5a1.125 1.125 0 01-1.125-1.125v-1.5a3.375 3.375 0 00-3.375-3.375H9.75\" />\r\n </svg>\r\n return (\r\n     <div className='font-[\"Poppins\"]'>\r\n-        <Hea\r\n+        <Header/>\r\n       <div className='container   w-full h-full mx-auto text-center'>\r\n        \r\n-        <h1 className='text-xl flex items-center gap-2 justify-center font-semibold my-4'>\r\n-          <img src={icon} className='w-8'/>\r\n-          QR Scanner</h1>\r\n         \r\n-        <div className=''>\r\n-        <img className=\"absolute w-3/4 mx-11 mt-11 z-10\" src={load} alt=\"load\"></img>\r\n-      <video id=\"qr\" className='  md:w-2/4 md:h-full    mx-auto'  ></video>\r\n-    </div>\r\n-    \r\n-   \r\n-    <div className='w-full absolute font-semibold text-sm overflow-x-scroll bottom-0 bg-gray-200'>\r\n-     \r\n-    </div>\r\n-    {button}\r\n-</div>\r\n-    </div>\r\n-  )\r\n-}\r\n-export default Reader\n-import React,{useState,useEffect} from 'react'\r\n-import QrScanner from 'qr-scanner';\r\n-import load from './load.gif';\r\n-import icon from \"./icon.png\";\r\n-function Reader() {\r\n-    /* use states */\r\n-  /* strated useState used to identify the scanning is started */\r\n-  const [started,setStarted]=useState(false)\r\n-  \r\n-  const [resultTxt,setResultTxt]=useState(\"\")\r\n-  /* When qr code get an result */\r\n-  let done=(result,qrScanner)=>{\r\n-    setResultTxt(result)\r\n- \r\n-   \r\n-    /* setButton(<button className='p-2 m-2 rounded primary-bg secondary-text' onClick={()=>qrScanner.stop()}>Stop</button>) */\r\n-\r\n-  }\r\n-  /* starting the scan */\r\n-let scan=()=>{\r\n-setStarted(true)\r\n-setButton(\"\")\r\n-  let video=document.getElementById(\"qr\")\r\n-  const qrScanner = new QrScanner(\r\n-    video,\r\n-    result => done(result,qrScanner),\r\n-    // No options provided. This will use the old api and is deprecated in the current version until next major version.\r\n-    );\r\n-    qrScanner.start()\r\n-}\r\n-/* to change scannow button to scanning when scan started */\r\n-const [button,setButton]=useState( <button className='p-3 my-40 z-20 shadow-sm rounded bg-blue-500 text-white ' onClick={scan}>Scan Now</button>)\r\n-  console.log(load)\r\n-useEffect(()=>{\r\n-  console.log(resultTxt)\r\n-})\r\n-\r\n-let ico=<svg  xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-6 h-6\"  >\r\n-<path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.75 17.25v3.375c0 .621-.504 1.125-1.125 1.125h-9.75a1.125 1.125 0 01-1.125-1.125V7.875c0-.621.504-1.125 1.125-1.125H6.75a9.06 9.06 0 011.5.124m7.5 10.376h3.375c.621 0 1.125-.504 1.125-1.125V11.25c0-4.46-3.243-8.161-7.5-8.876a9.06 9.06 0 00-1.5-.124H9.375c-.621 0-1.125.504-1.125 1.125v3.5m7.5 10.375H9.375a1.125 1.125 0 01-1.125-1.125v-9.25m12 6.625v-1.875a3.375 3.375 0 00-3.375-3.375h-1.5a1.125 1.125 0 01-1.125-1.125v-1.5a3.375 3.375 0 00-3.375-3.375H9.75\" />\r\n-</svg>\r\n-return (\r\n-    <div className='font-[\"Poppins\"]'>\r\n-      <div className='container   w-full h-full mx-auto text-center'>\r\n-       \r\n-        <h1 className='text-xl flex items-center gap-2 justify-center font-semibold my-4'>\r\n-          <img src={icon} className='w-8'/>\r\n-          QR Scanner</h1>\r\n         \r\n         <div className=''>\r\n         <img className=\"absolute w-3/4 mx-11 mt-11 z-10\" src={load} alt=\"load\"></img>\r\n       <video id=\"qr\" className='  md:w-2/4 md:h-full    mx-auto'  ></video>\r\n"
                },
                {
                    "date": 1676867344824,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.75 17.25v3.375c0 .621-.504 1.125-1.125 1.125h-9.75a1.125 1.125 0 01-1.125-1.125V7.875c0-.621.504-1.125 1.125-1.125H6.75a9.06 9.06 0 011.5.124m7.5 10.376h3.375c.621 0 1.125-.504 1.125-1.125V11.25c0-4.46-3.243-8.161-7.5-8.876a9.06 9.06 0 00-1.5-.124H9.375c-.621 0-1.125.504-1.125 1.125v3.5m7.5 10.375H9.375a1.125 1.125 0 01-1.125-1.125v-9.25m12 6.625v-1.875a3.375 3.375 0 00-3.375-3.375h-1.5a1.125 1.125 0 01-1.125-1.125v-1.5a3.375 3.375 0 00-3.375-3.375H9.75\" />\r\n </svg>\r\n return (\r\n     <div className='font-[\"Poppins\"]'>\r\n-        <Header/>\r\n+   \r\n       <div className='container   w-full h-full mx-auto text-center'>\r\n        \r\n         \r\n         \r\n"
                },
                {
                    "date": 1676867553955,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,63 @@\n+import React,{useState,useEffect} from 'react'\r\n+import QrScanner from 'qr-scanner';\r\n+import load from './load.gif';\r\n+import icon from \"./icon.png\";\r\n+import Header from '../Header';\r\n+function Reader(props) {\r\n+    /* use states */\r\n+  /* strated useState used to identify the scanning is started */\r\n+  const [started,setStarted]=useState(false)\r\n+  \r\n+  const [resultTxt,setResultTxt]=useState(\"\")\r\n+  /* When qr code get an result */\r\n+  let done=(result,qrScanner)=>{\r\n+    setResultTxt(result)\r\n+ \r\n+   \r\n+    /* setButton(<button className='p-2 m-2 rounded primary-bg secondary-text' onClick={()=>qrScanner.stop()}>Stop</button>) */\r\n+\r\n+  }\r\n+  /* starting the scan */\r\n+let scan=()=>{\r\n+setStarted(true)\r\n+setButton(\"\")\r\n+  let video=document.getElementById(\"qr\")\r\n+  const qrScanner = new QrScanner(\r\n+    video,\r\n+    result => done(result,qrScanner),\r\n+    // No options provided. This will use the old api and is deprecated in the current version until next major version.\r\n+    );\r\n+    qrScanner.start()\r\n+}\r\n+/* to change scannow button to scanning when scan started */\r\n+const [button,setButton]=useState( <button className='p-3 my-40 z-20 shadow-sm rounded bg-blue-500 text-white ' onClick={scan}>Scan Now</button>)\r\n+  console.log(load)\r\n+useEffect(()=>{\r\n+  console.log(resultTxt)\r\n+})\r\n+\r\n+let ico=<svg  xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-6 h-6\"  >\r\n+<path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.75 17.25v3.375c0 .621-.504 1.125-1.125 1.125h-9.75a1.125 1.125 0 01-1.125-1.125V7.875c0-.621.504-1.125 1.125-1.125H6.75a9.06 9.06 0 011.5.124m7.5 10.376h3.375c.621 0 1.125-.504 1.125-1.125V11.25c0-4.46-3.243-8.161-7.5-8.876a9.06 9.06 0 00-1.5-.124H9.375c-.621 0-1.125.504-1.125 1.125v3.5m7.5 10.375H9.375a1.125 1.125 0 01-1.125-1.125v-9.25m12 6.625v-1.875a3.375 3.375 0 00-3.375-3.375h-1.5a1.125 1.125 0 01-1.125-1.125v-1.5a3.375 3.375 0 00-3.375-3.375H9.75\" />\r\n+</svg>\r\n+return (\r\n+    <div className='font-[\"Poppins\"]'>\r\n+   \r\n+      <div className='container   w-full h-full mx-auto text-center'>\r\n+       \r\n+        \r\n+        \r\n+        <div className=''>\r\n+        <img className=\"absolute w-3/4 mx-11 mt-11 z-10\" src={load} alt=\"load\"></img>\r\n+      <video id=\"qr\" className='  md:w-2/4 md:h-full    mx-auto'  ></video>\r\n+    </div>\r\n+    \r\n+   \r\n+    <div className='w-full absolute font-semibold text-sm overflow-x-scroll bottom-0 bg-gray-200'>\r\n+     \r\n+    </div>\r\n+    {button}\r\n+</div>\r\n+    </div>\r\n+  )\r\n+}\r\n+export default Reader\n\\ No newline at end of file\n"
                },
                {
                    "date": 1676867581982,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n   /* When qr code get an result */\r\n   let done=(result,qrScanner)=>{\r\n     setResultTxt(result)\r\n  \r\n-   \r\n+   props.\r\n     /* setButton(<button className='p-2 m-2 rounded primary-bg secondary-text' onClick={()=>qrScanner.stop()}>Stop</button>) */\r\n \r\n   }\r\n   /* starting the scan */\r\n@@ -59,68 +59,5 @@\n </div>\r\n     </div>\r\n   )\r\n }\r\n-export default Reader\n-import React,{useState,useEffect} from 'react'\r\n-import QrScanner from 'qr-scanner';\r\n-import load from './load.gif';\r\n-import icon from \"./icon.png\";\r\n-import Header from '../Header';\r\n-function Reader() {\r\n-    /* use states */\r\n-  /* strated useState used to identify the scanning is started */\r\n-  const [started,setStarted]=useState(false)\r\n-  \r\n-  const [resultTxt,setResultTxt]=useState(\"\")\r\n-  /* When qr code get an result */\r\n-  let done=(result,qrScanner)=>{\r\n-    setResultTxt(result)\r\n- \r\n-   \r\n-    /* setButton(<button className='p-2 m-2 rounded primary-bg secondary-text' onClick={()=>qrScanner.stop()}>Stop</button>) */\r\n-\r\n-  }\r\n-  /* starting the scan */\r\n-let scan=()=>{\r\n-setStarted(true)\r\n-setButton(\"\")\r\n-  let video=document.getElementById(\"qr\")\r\n-  const qrScanner = new QrScanner(\r\n-    video,\r\n-    result => done(result,qrScanner),\r\n-    // No options provided. This will use the old api and is deprecated in the current version until next major version.\r\n-    );\r\n-    qrScanner.start()\r\n-}\r\n-/* to change scannow button to scanning when scan started */\r\n-const [button,setButton]=useState( <button className='p-3 my-40 z-20 shadow-sm rounded bg-blue-500 text-white ' onClick={scan}>Scan Now</button>)\r\n-  console.log(load)\r\n-useEffect(()=>{\r\n-  console.log(resultTxt)\r\n-})\r\n-\r\n-let ico=<svg  xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-6 h-6\"  >\r\n-<path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.75 17.25v3.375c0 .621-.504 1.125-1.125 1.125h-9.75a1.125 1.125 0 01-1.125-1.125V7.875c0-.621.504-1.125 1.125-1.125H6.75a9.06 9.06 0 011.5.124m7.5 10.376h3.375c.621 0 1.125-.504 1.125-1.125V11.25c0-4.46-3.243-8.161-7.5-8.876a9.06 9.06 0 00-1.5-.124H9.375c-.621 0-1.125.504-1.125 1.125v3.5m7.5 10.375H9.375a1.125 1.125 0 01-1.125-1.125v-9.25m12 6.625v-1.875a3.375 3.375 0 00-3.375-3.375h-1.5a1.125 1.125 0 01-1.125-1.125v-1.5a3.375 3.375 0 00-3.375-3.375H9.75\" />\r\n-</svg>\r\n-return (\r\n-    <div className='font-[\"Poppins\"]'>\r\n-   \r\n-      <div className='container   w-full h-full mx-auto text-center'>\r\n-       \r\n-        \r\n-        \r\n-        <div className=''>\r\n-        <img className=\"absolute w-3/4 mx-11 mt-11 z-10\" src={load} alt=\"load\"></img>\r\n-      <video id=\"qr\" className='  md:w-2/4 md:h-full    mx-auto'  ></video>\r\n-    </div>\r\n-    \r\n-   \r\n-    <div className='w-full absolute font-semibold text-sm overflow-x-scroll bottom-0 bg-gray-200'>\r\n-     \r\n-    </div>\r\n-    {button}\r\n-</div>\r\n-    </div>\r\n-  )\r\n-}\r\n export default Reader\n\\ No newline at end of file\n"
                },
                {
                    "date": 1676867590614,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n   /* When qr code get an result */\r\n   let done=(result,qrScanner)=>{\r\n     setResultTxt(result)\r\n  \r\n-   props.\r\n+   props.finish()\r\n     /* setButton(<button className='p-2 m-2 rounded primary-bg secondary-text' onClick={()=>qrScanner.stop()}>Stop</button>) */\r\n \r\n   }\r\n   /* starting the scan */\r\n"
                }
            ],
            "date": 1676829646081,
            "name": "Commit-0",
            "content": "import React,{useState,useEffect} from 'react'\r\nimport QrScanner from 'qr-scanner';\r\nimport load from './load.gif';\r\nimport icon from \"./icon.png\";\r\nfunction Reader() {\r\n    /* use states */\r\n  /* strated useState used to identify the scanning is started */\r\n  const [started,setStarted]=useState(false)\r\n  \r\n  const [resultTxt,setResultTxt]=useState([\"\"])\r\n  /* When qr code get an result */\r\n  let done=(result,qrScanner)=>{\r\n    setResultTxt([result,...resultTxt])\r\n    console.log(resultTxt)\r\n    console.log(resultTxt.length!=1)\r\n   \r\n    /* setButton(<button className='p-2 m-2 rounded primary-bg secondary-text' onClick={()=>qrScanner.stop()}>Stop</button>) */\r\n\r\n  }\r\n  /* starting the scan */\r\nlet scan=()=>{\r\nsetStarted(true)\r\nsetButton(\"\")\r\n  let video=document.getElementById(\"qr\")\r\n  const qrScanner = new QrScanner(\r\n    video,\r\n    result => done(result,qrScanner),\r\n    // No options provided. This will use the old api and is deprecated in the current version until next major version.\r\n    );\r\n    qrScanner.start()\r\n}\r\n/* to change scannow button to scanning when scan started */\r\nconst [button,setButton]=useState( <button className='p-3 my-40 z-20 shadow-sm rounded bg-blue-500 text-white ' onClick={scan}>Scan Now</button>)\r\n  console.log(load)\r\nuseEffect(()=>{\r\n  console.log(resultTxt)\r\n})\r\nlet copytxt=(e)=>{\r\n \r\n\r\nnavigator.clipboard.writeText(resultTxt[0])\r\nalert(\"Text copied\")\r\n}\r\nlet ico=<svg  xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-6 h-6\"  >\r\n<path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.75 17.25v3.375c0 .621-.504 1.125-1.125 1.125h-9.75a1.125 1.125 0 01-1.125-1.125V7.875c0-.621.504-1.125 1.125-1.125H6.75a9.06 9.06 0 011.5.124m7.5 10.376h3.375c.621 0 1.125-.504 1.125-1.125V11.25c0-4.46-3.243-8.161-7.5-8.876a9.06 9.06 0 00-1.5-.124H9.375c-.621 0-1.125.504-1.125 1.125v3.5m7.5 10.375H9.375a1.125 1.125 0 01-1.125-1.125v-9.25m12 6.625v-1.875a3.375 3.375 0 00-3.375-3.375h-1.5a1.125 1.125 0 01-1.125-1.125v-1.5a3.375 3.375 0 00-3.375-3.375H9.75\" />\r\n</svg>\r\nreturn (\r\n    <div className='font-[\"Poppins\"]'>\r\n      <div className='container   w-full h-full mx-auto text-center'>\r\n       \r\n        <h1 className='text-xl flex items-center gap-2 justify-center font-semibold my-4'>\r\n          <img src={icon} className='w-8'/>\r\n          QR Scanner</h1>\r\n        \r\n        <div className=''>\r\n        <img className=\"absolute w-3/4 mx-11 mt-11 z-10\" src={load} alt=\"load\"></img>\r\n      <video id=\"qr\" className='  md:w-2/4 md:h-full    mx-auto'  ></video>\r\n    </div>\r\n    \r\n   \r\n    <div className='w-full absolute font-semibold text-sm overflow-x-scroll bottom-0 bg-gray-200'>\r\n      <div className='flex gap-2 items-center justify-center'>\r\n      {resultTxt.length!=1?<svg onClick={(e)=>{copytxt(e);}} xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-6 h-6 \"  >\r\n  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.75 17.25v3.375c0 .621-.504 1.125-1.125 1.125h-9.75a1.125 1.125 0 01-1.125-1.125V7.875c0-.621.504-1.125 1.125-1.125H6.75a9.06 9.06 0 011.5.124m7.5 10.376h3.375c.621 0 1.125-.504 1.125-1.125V11.25c0-4.46-3.243-8.161-7.5-8.876a9.06 9.06 0 00-1.5-.124H9.375c-.621 0-1.125.504-1.125 1.125v3.5m7.5 10.375H9.375a1.125 1.125 0 01-1.125-1.125v-9.25m12 6.625v-1.875a3.375 3.375 0 00-3.375-3.375h-1.5a1.125 1.125 0 01-1.125-1.125v-1.5a3.375 3.375 0 00-3.375-3.375H9.75\" />\r\n</svg>:null\r\n}\r\n     {resultTxt.length!=1?resultTxt.map((r)=>{\r\nreturn (\r\n \r\n<h1 onClick={(e)=>{copytxt(e)}} className='my-4 mx-2'>\r\n\r\n\r\n  {r}</h1>\r\n\r\n \r\n)\r\n     }):resultTxt[0]}\r\n     </div>\r\n    </div>\r\n    {button}\r\n</div>\r\n    </div>\r\n  )\r\n}\r\nexport default Reader"
        }
    ]
}